name: Build and Deploy to Docker Hub from dev branch (preview version)

on:
  push:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get unique tag for preview release
      id: vars
      run: |
        DATE_TAG=$(date +'%Y-%d%m')
        echo "RELEASE_TAG=${DATE_TAG}-${{ github.run_number }}" >> $GITHUB_ENV

    - name: Get package version
      id: pkg
      run: |
        VERSION=$(jq -r '.version' package.json)
        echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Build and push Docker image(Frontend)
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        target: frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/tutoriallm_frontend:latest-preview
          ${{ secrets.DOCKER_USERNAME }}/tutoriallm_frontend:${{ env.PACKAGE_VERSION }}-preview.${{ env.RELEASE_TAG }}

    - name: Build and push Docker image(Backend)
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        target: backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/tutoriallm_api:latest-preview
          ${{ secrets.DOCKER_USERNAME }}/tutoriallm_api:${{ env.PACKAGE_VERSION }}-preview.${{ env.RELEASE_TAG }}


    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}-preview.${{ env.RELEASE_TAG }}
        draft: false
        prerelease: true
        body: |
          Changes in this preview release:
          ${{ github.event.head_commit.message }}
          The release is also available on Docker Hub as ${{ secrets.DOCKER_USERNAME }}/tutoriallm:${{ env.PACKAGE_VERSION }}-preview.${{ env.RELEASE_TAG }}