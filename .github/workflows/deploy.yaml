name: Build and Deploy to Docker Hub

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    environment: production
    env:
      OPENAPI_DOCS_URL: ${{ vars.OPENAPI_DOCS_URL }}


    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get package version
      id: pkg
      run: |
        VERSION=$(jq -r '.version' package.json)
        echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Check if version already exists
      id: version_check
      run: |
        if git rev-parse "v${{ env.PACKAGE_VERSION }}" >/dev/null 2>&1; then
          echo "Version ${{ env.PACKAGE_VERSION }} already exists."
          exit 1
        fi

    - name: Build and push Docker image(Frontend)
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        target: frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/tutoriallm_frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/tutoriallm_frontend:${{ env.PACKAGE_VERSION }}

    - name: Build and push Docker image(Backend)
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        target: backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/tutoriallm_api:latest
          ${{ secrets.DOCKER_USERNAME }}/tutoriallm_api:${{ env.PACKAGE_VERSION }}
      

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}
        draft: false
        prerelease: false
        body: |
          Changes in this release:
          ${{ github.event.head_commit.message }}

          The release is also available on Docker Hub:
          Frontend: ${{ secrets.DOCKER_USERNAME }}/tutoriallm_frontend:${{ env.PACKAGE_VERSION }}
          Backend: ${{ secrets.DOCKER_USERNAME }}/tutoriallm_backend:${{ env.PACKAGE_VERSION }}