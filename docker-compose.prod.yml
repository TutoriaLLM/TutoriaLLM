version: '3.8'

services:
  redis:
    container_name: code-tutorial-redis-prod
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"

  db:
    container_name: code-tutorial-db-prod
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: UTC
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s  
  app: 
    container_name: code-tutorial-app-prod
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    ports:
      - $PORT:$PORT
    env_file:
      - .env
    command: >
      sh -c "
        if [ ! -f /app/.initialized ]; then
          npm install &&
          npm run drizzle:generate &&
          npm run drizzle:push &&
          npm run reset-credential &&
          npm run reset-tutorials &&
          touch /app/.initialized &&
          npm run start 
        else
          npm install &&
          npm run drizzle:generate &&
          npm run drizzle:push &&
          npm run start;
        fi
      "
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PORT=$PORT
      - DB_HOST=db