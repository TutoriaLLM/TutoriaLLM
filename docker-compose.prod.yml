services:
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --accesslog=true
      - --accesslog.addinternals
      - --metrics.addinternals
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=$EMAIL
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=$EMAIL
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - /letsencrypt:/letsencrypt
    depends_on:
      - app
  db:
    container_name: code-tutorial-db-prod
    image: pgvector/pgvector:pg14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: UTC
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s 
    volumes:
      - db_data_db:/var/lib/postgresql/data
    restart: always
  app: 
    container_name: code-tutorial-app-prod
    build:
      context: .
      dockerfile: Dockerfile.prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code-tutorial-app-prod-http.rule=Host(`$DOMAIN`)"
      - "traefik.http.routers.code-tutorial-app-prod-http.entrypoints=web" # HTTP用のエントリーポイントを指定
      - "traefik.http.routers.code-tutorial-app-prod-https.rule=Host(`$DOMAIN`)"
      - "traefik.http.routers.code-tutorial-app-prod-https.entrypoints=websecure" # HTTPS用のエントリーポイントを指定
      - "traefik.http.routers.code-tutorial-app-prod-https.tls.certresolver=myresolver"
    restart: always
    env_file:
      - .env
    command: >
      sh -c "
        if [ ! -f /app_data/.app_data ]; then
          pnpm install &&
          pnpm run drizzle:generate &&
          pnpm run drizzle:migrate &&
          pnpm run reset-credential &&
          touch /app_data/.app_data &&
          pnpm run start 
        else
          pnpm install &&
          pnpm run drizzle:generate &&
          pnpm run drizzle:migrate &&
          pnpm run start;
        fi
      "
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./app_data:/app_data
volumes:
  db_data_db:
  letsencrypt: